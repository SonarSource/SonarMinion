{"description":"All constants are static final.\n\nHowever, not all static final fields are constants.\n\nFor example:\n{code}\nprivate static final Set\u003cString\u003e fruits \u003d Sets.newHashSet(); // \"fruits\" is not a constant - because it is mutable\n\nprivate static final Set\u003cString\u003e FRUITS \u003d ImmutableSet.of(\"apple\", \"orange\", \"strawberry\"); // \"FRUITS\" is a constant - because it is immutable\n{code}\n\nSee also:\n* This pull request: https://github.com/SonarSource/sonar-java/pull/8\n* The JLS on constant names (not implying that static final are always constants)\n* Effective Java\n* http://google-styleguide.googlecode.com/svn/trunk/javaguide.html#s5.2.4-constant-names\n* http://stackoverflow.com/questions/1417190/should-a-static-final-logger-be-declared-in-upper-case\n\nAs it is very difficult to determine whether an object is mutable or not, in order to avoid false positive, this rule will be restricted to be applied on primitive types, primitive wrappers and String.","component":"SonarJava","component_version":"2.9.1"}