{"description":"Because of the combination of exceptional path and while loop on a field expected to be modified by mutlithreading, an infinite loop can be created when reporting the flow from SE. \r\n\r\nThe parent of the EG will be the exceptional path leading the path to go up the EG cycling in the graph making the flow computation an infinite loop.\r\n\r\n{code}\r\npublic class Bar {\r\n  boolean active;\r\n  private Foo foo \u003d null;\r\n\r\n  public void run() {\r\n    active \u003d true;\r\n    while (active) { // Noncompliant FP\r\n      try {\r\n        foo.method();\r\n      } catch (CustomException se) {\r\n      }\r\n    }\r\n  }\r\n\r\n  private class Foo {\r\n    public void method() throws CustomException {\r\n    }\r\n  }\r\n  class CustomException extends Exception {\r\n  }\r\n}\r\n{code}","component":"SonarJava","component_version":"4.3"}