{"description":"Fields of other objects, accessed through member access (using {{myObj.myField}} for instance) are handled as being different each time they are accessed. Consequently, every time {{myObj.myField}} is accessed, a new symbolic value is created.\r\n\r\nThis model reproduces the fact that in multi-threading environment, the variable can be changed from the outside of the method currently being explored, in between two access. \r\n\r\nHowever, it consequently can lead to the following case, which could be considered as FP:\r\n\r\n{code}\r\nclass A {\r\n\r\n  public int foo(A that) {\r\n\r\n    // check certs\r\n    if ((this.certs \u003d\u003d null \u0026\u0026 that.certs !\u003d null)\r\n      || (this.certs !\u003d null \u0026\u0026 that.certs \u003d\u003d null)\r\n      || (this.certs !\u003d null \u0026\u0026 that.certs !\u003d null \u0026\u0026 this.certs.length !\u003d that.certs.length)) {\r\n      return 0;\r\n    }\r\n\r\n    // only two ways to get here:\r\n    // - this.certs and that.certs are both null\r\n    // - this.certs and that.certs are both not null\r\n    if (that.certs !\u003d null) {\r\n      return this.certs.length; // FP NPE\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  private String[] certs;\r\n\r\n}\r\n{code}\r\n\r\n\r\nThe following code works as expected and do not raise a FP, as we use a dedicated variable\r\n{code}\r\nclass A {\r\n\r\n  public int foo(A that) {\r\n\r\n    // check certs\r\n    String[] thatCerts \u003d that.certs;\r\n    if ((this.certs \u003d\u003d null \u0026\u0026 thatCerts !\u003d null)\r\n      || (this.certs !\u003d null \u0026\u0026 thatCerts \u003d\u003d null)\r\n      || (this.certs !\u003d null \u0026\u0026 thatCerts !\u003d null \u0026\u0026 this.certs.length !\u003d thatCerts.length)) {\r\n      return 0;\r\n    }\r\n\r\n    // only 2 ways to get here:\r\n    // - both certs are null\r\n    // - both certs are not null\r\n    if (thatCerts !\u003d null) {\r\n      return this.certs.length; // OK\r\n    }\r\n    return 1;\r\n  }\r\n\r\n  private String[] certs;\r\n\r\n}\r\n{code}","component":"SonarJava","component_version":""}