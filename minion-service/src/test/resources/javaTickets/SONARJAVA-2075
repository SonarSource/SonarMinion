{"description":"In the following code, implying autoboxing, we fail to resolve the method:\r\n\r\n{code}\r\nclass A {\r\n  public final boolean foo(Integer... values) {\r\n    if (values.length \u003d\u003d 1) {\r\n      return foo(values[0]); // resolved to the varargs method instead of the matching arity method\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private final boolean foo(int val) { // FP unused method\r\n    return 42 \u003d\u003d val;\r\n  }\r\n}\r\n{code}\r\n\r\nIn the following code, which does NOT rely on autoboxing, we resolve methods correctly:\r\n{code}\r\nclass B {\r\n  public final boolean bar(Object... values) {\r\n    if (values.length \u003d\u003d 1) {\r\n      return bar((String) values[0]); // method resolved correctly\r\n    }\r\n    return false;\r\n  }\r\n\r\n  private final boolean bar(String val) {\r\n    return val \u003d\u003d null;\r\n  }\r\n}\r\n{code}","component":"SonarJava","component_version":"4.9"}