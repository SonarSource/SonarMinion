{"description":"{code}\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.Random;\r\npublic class Squid2583 {\r\n\r\n  public void processObj(final MyObject obj) {\r\n    if (obj.isNestedChange() \u0026\u0026 !isSpecial(obj)) { // FP(S2583): caused by the other FP\r\n      // Do code\r\n    } else {\r\n      // Do code\r\n    }\r\n  }\r\n\r\n  private boolean isSpecial(MyObject obj) {\r\n    return obj.getMyString().contains(\"B\") \u0026\u0026 noEmptyNodeNames(obj) \u0026\u0026 nextRandom(); // FP(S2583)\r\n  }\r\n\r\n  private boolean nextRandom() {\r\n    return new Random().nextBoolean();\r\n  }\r\n\r\n  private boolean noEmptyNodeNames(MyObject obj) {\r\n    return obj.getValueOne().isPresent() \u0026\u0026 obj.getValueTwo().isPresent();\r\n  }\r\n\r\n  public static final class MyObject {\r\n\r\n    // In the actual object the list has a getter and is modified outside of this class.\r\n    private final List\u003cMyObject\u003e list \u003d new ArrayList\u003c\u003e();\r\n\r\n    private String myString;\r\n    private final Optional\u003cString\u003e valueOne;\r\n    private final Optional\u003cString\u003e valueTwo;\r\n\r\n    public MyObject(final String myString, final String valueOne, final String valueTwo) {\r\n      this.myString \u003d myString;\r\n      this.valueOne \u003d Optional.ofNullable(valueOne);\r\n      this.valueTwo \u003d Optional.ofNullable(valueTwo);\r\n    }\r\n\r\n    public String getMyString() {\r\n      return myString;\r\n    }\r\n\r\n    public Optional\u003cString\u003e getValueOne() {\r\n      return valueOne;\r\n    }\r\n\r\n    public Optional\u003cString\u003e getValueTwo() {\r\n      return valueTwo;\r\n    }\r\n\r\n    public boolean isNestedChange() {\r\n      return !list.isEmpty();\r\n    }\r\n  }\r\n\r\n}\r\n{code}","component":"SonarJava","component_version":"4.3"}