{"description":"When the the {{continue}} or {{break}} statement are in the body of the method, we try to build the wrong CFG, leading to {{IllegalStateException}} thrown by implementation of rule RSPEC-1751.\r\n\r\nThe following code will trigger the exception, as we fail to stop the recursion when searching for the loop enclosing the {{continue}} or {{break}} statement.\r\n\r\n{code}\r\npublic abstract class A {\r\n  void foo(Iterable\u003cA\u003e i) {\r\n    i.forEach(a -\u003e {\r\n      for (Object o : a.bar()) {\r\n        if (o.equals(\"\")) {\r\n          continue;\r\n        }\r\n        break;\r\n      }\r\n    });\r\n  }\r\n\r\n  abstract Iterable\u003cObject\u003e bar();\r\n}\r\n{code}\r\n\r\n{code}\r\nCaused by: java.lang.IllegalStateException: CFG necessarily contains the loop block.\r\n\tat org.sonar.java.checks.UnconditionalJumpStatementCheck.lambda$getLoopBlock$1(UnconditionalJumpStatementCheck.java:159)\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat org.sonar.java.checks.UnconditionalJumpStatementCheck.getLoopBlock(UnconditionalJumpStatementCheck.java:159)\r\n\tat org.sonar.java.checks.UnconditionalJumpStatementCheck.executeUnconditionnally(UnconditionalJumpStatementCheck.java:150)\r\n\tat org.sonar.java.checks.UnconditionalJumpStatementCheck.visitNode(UnconditionalJumpStatementCheck.java:84)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:95)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visitChildren(SubscriptionVisitor.java:120)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.visit(SubscriptionVisitor.java:97)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.scanTree(SubscriptionVisitor.java:78)\r\n\tat org.sonar.java.ast.visitors.SubscriptionVisitor.scanFile(SubscriptionVisitor.java:64)\r\n\tat org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:122)\r\n\tat org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:96)\r\n\t... 24 more\r\n{code}","component":"SonarJava","component_version":"5.1"}