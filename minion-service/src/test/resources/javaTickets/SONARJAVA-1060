{"description":"From the test file there is in fact an issue on the following line:\ncloseable \u003d new FileReader(\"\");\n\n{code}\nCloseable closeable_never_closed_but_state_is_lost(Closeable closeable) throws Exception {\n    Formatter formatter \u003d new Formatter(); // Compliant - (unknown) as Closeable instance is later used as method parameter\n    myMethod(formatter);\n\n    FileInputStream fis \u003d getFileInputStream(); // Compliant - Closeable is retrieved but then used as argument\n    fis.available();\n    myMethod(fis);\n\n    br \u003d new BufferedReader(new FileReader(\"\")); // Compliant - only look at local variables\n\n    BufferedWriter bw \u003d new BufferedWriter(new FileWriter(\"\")); // Compliant - closeable state is lost\n    Object o \u003d getObject(bw);\n\n    closeable \u003d new FileReader(\"\"); // Compliant - responsability of closing the variable is not in the method\n\n    OutputStream ubaos \u003d new UnsyncByteArrayOutputStream(); // Compliant - UnsyncByteArrayOutputStream does not implements close()\n    ubaos.write(0);\n\n    Reader reader \u003d new BufferedReader(br); // Compliant - uses a field\n\n    RandomAccessFile raf \u003d new RandomAccessFile(\"\", \"r\"); // Compliant - Closeable is returned so its state is unknown\n    return (Closeable) raf;\n  }\n{code}","component":"SonarJava","component_version":""}