{"description":"The issue has already been fixed for pom files (SONARJAVA-1696) but the general case of xml files is still failing.\r\n\r\nRange of secondary locations for java xml rules is always empty which raises incompatiblities with SQ API.\r\n\r\n{code}\r\nMojoExecutionException: Start pointer [line\u003d57, lineOffset\u003d0] should be before end pointer [line\u003d57, lineOffset\u003d0]\r\n    at org.sonarsource.scanner.maven.bootstrap.ExceptionHandling.handle(ExceptionHandling.java:36)\r\n    at org.sonarsource.scanner.maven.bootstrap.ScannerBootstrapper.execute(ScannerBootstrapper.java:81)\r\n    at org.sonarsource.scanner.maven.SonarQubeMojo.execute(SonarQubeMojo.java:122)\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)\r\n    ... 20 more\r\nCaused by: java.lang.IllegalArgumentException: Start pointer [line\u003d57, lineOffset\u003d0] should be before end pointer [line\u003d57, lineOffset\u003d0]\r\n    at org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:145)\r\n    at org.sonar.api.batch.fs.internal.DefaultInputFile.newRangeValidPointers(DefaultInputFile.java:254)\r\n    at org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:238)\r\n    at org.sonar.java.JavaIssue.range(JavaIssue.java:96)\r\n    at org.sonar.java.JavaIssue.lambda$addFlow$0(JavaIssue.java:88)\r\n    at org.sonar.java.JavaIssue$$Lambda$178/524923786.apply(Unknown Source)\r\n    at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)\r\n    at java.util.Collections$2.tryAdvance(Collections.java:4717)\r\n    at java.util.Collections$2.forEachRemaining(Collections.java:4725)\r\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:512)\r\n    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:502)\r\n    at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\r\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n    at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)\r\n    at org.sonar.java.JavaIssue.addFlow(JavaIssue.java:90)\r\n    at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:220)\r\n    at org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:203)\r\n{code}","component":"SonarJava","component_version":"4.7"}