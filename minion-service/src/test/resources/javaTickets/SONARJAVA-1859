{"description":"In the following code sample, all the method invocations using explicit type arguments are not resolved.\r\nSee unit test {{org.sonar.java.resolve.GenericsTest.parametrized_method_resolution_with_bounded_type_variable()}}\r\n\r\n{code}\r\nclass PreTest\u003cT\u003e {\r\n  \u003cS extends T\u003e void foo(S s) {}\r\n}\r\n\r\nclass Test\u003cT\u003e extends PreTest\u003cT\u003e {\r\n  void test() {\r\n    new Test\u003cA\u003e().\u003cA\u003efoo(new A());\r\n    new Test\u003cA\u003e().\u003cB\u003efoo(new B());\r\n    new Test\u003cA\u003e().foo(new A());\r\n    new Test\u003cA\u003e().foo(new B());\r\n  }\r\n}\r\n\r\nclass Test2 extends Test\u003cA\u003e {\r\n  void test2() {\r\n    new Test2().\u003cA\u003efoo(new A());\r\n    new Test2().\u003cB\u003efoo(new B());\r\n    new Test2().foo(new A());\r\n    new Test2().foo(new B());\r\n  }\r\n}\r\n\r\nclass Test3 extends Test2 {\r\n  void test3() {\r\n    new Test3().\u003cA\u003efoo(new A());\r\n    new Test3().\u003cB\u003efoo(new B());\r\n    new Test3().foo(new A());\r\n    new Test3().foo(new B());\r\n  }\r\n}\r\n\r\nclass A {}\r\nclass B extends A {}\r\n{code}","component":"SonarJava","component_version":"4.9"}