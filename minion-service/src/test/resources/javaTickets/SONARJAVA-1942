{"description":"When selecting a path on ternary operators, we stack a TRUE/FALSE value. This value is sometime not consumed, which means that the stack is polluted, for instance when considering method invocations.\r\n\r\n{code}\r\nclass A {\r\n  private void bar(@Nullable Object value) {\r\n    A.foo(value, value !\u003d null ? \"A\" : null);  \r\n // ^^^^^  wrong issue saying that \u0027A\u0027 is nullable\r\n  }\r\n\r\n  static void foo(Object o1, Object o2) {  }\r\n}\r\n{code}","component":"SonarJava","component_version":"4.3"}