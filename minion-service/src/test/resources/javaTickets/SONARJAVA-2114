{"description":"Cleanup of programState does not keep constraints on dead Symbols when variable are reassigned.\r\nIn the following example, we will end up having a new SV assigned to symbol {{header}}, even if the initial SV (for instance, {{SV_3}}) is protected (as being a parameter, it will be used to create method yields). \r\n\r\n{code}\r\n  private static int guessVersion(String header) {\r\n    header \u003d header.toLowerCase();\r\n    if (header.indexOf(\"expires\u003d\") !\u003d -1) {\r\n      return 1;\r\n    }\r\n\r\n    return 0;\r\n  }\r\n{code}\r\n\r\nConsequently, when creating the yields at the end of execution paths, we end up not recovering any constraints on the {{SV_3}}, and therefore we miss the fact that {{SV_3}} should never be {{NULL}}.","component":"SonarJava","component_version":"4.6"}