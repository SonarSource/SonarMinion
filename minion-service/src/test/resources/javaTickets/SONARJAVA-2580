{"description":"Junit 5.0 wrongly fills the {{classname}} test attribute of the XML report with the name of the method (See [JUNIT ticket #1182|https://github.com/junit-team/junit5/issues/1182]). Consequently, we fail to count the correct number of executed tests. While this should eventually be fixed in Junit 5.1 (as currently scheduled on junit side), we should at least provide the correct number of executed tests rather than only the one we successfully mapped to a test class.\r\n\r\nThe following code will count only 3 tests, instead of 13 distinct runs. {{@ParameterizedTest}} and {{@RepeatedTest}} are currently ignored.\r\n\r\n{code}\r\npackage org.foo;\r\n\r\nclass A {\r\n  public String bar(String s) {\r\n    return s;\r\n  }\r\n}\r\n{code}\r\n\r\n{code}\r\npackage org.foo;\r\n\r\nimport org.junit.jupiter.api.Nested;\r\nimport org.junit.jupiter.api.RepeatedTest;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.junit.jupiter.params.ParameterizedTest;\r\nimport org.junit.jupiter.params.provider.ValueSource;\r\n\r\nimport static org.assertj.core.api.Assertions.assertThat;\r\n\r\npublic class ATest {\r\n\r\n  @org.junit.Test\r\n  public void myNormalJunit4Test() {\r\n    assertThat(new A()).isNotNull();\r\n  }\r\n\r\n  @Test\r\n  public void myNormalJunit5Test() {\r\n    assertThat(new A()).isNotNull();\r\n  }\r\n\r\n  @RepeatedTest(value \u003d 3, name \u003d \"Repetition #{currentRepetition} / {totalRepetitions}\")\r\n  void myRepeatedTest() {\r\n    assertThat(new A()).isNotNull();\r\n  }\r\n\r\n  @ParameterizedTest\r\n  @ValueSource(strings \u003d {\r\n    \"hello\",\r\n    \"world\"\r\n  })\r\n  void myParametrizedTest(String s) {\r\n    assertThat(s).isNotNull();\r\n    assertThat(new A().bar(s)).isEqualTo(s);\r\n  }\r\n\r\n  @Nested\r\n  class RunTest {\r\n\r\n    @Test\r\n    public void myNormalJunit5Test() {\r\n      assertThat(new A()).isNotNull();\r\n    }\r\n\r\n    @RepeatedTest(value \u003d 3, name \u003d \"Repetition #{currentRepetition} / {totalRepetitions}\")\r\n    void myRepeatedTest() {\r\n      assertThat(new A()).isNotNull();\r\n    }\r\n\r\n    @ParameterizedTest\r\n    @ValueSource(strings \u003d {\r\n      \"hello\",\r\n      \"world\"\r\n    })\r\n    void myParametrizedTest(String s) {\r\n      assertThat(s).isNotNull();\r\n      assertThat(new A().bar(s)).isEqualTo(s);\r\n    }\r\n  }\r\n}\r\n{code}\r\n\r\nNote that the surefire report of my class {{ATest}} will have the following content. It has all the effective tests, but test results from nested test class and repeated/parametrized tests are wrong, sharing the test name as {{classname}}.\r\n{code:xml}\r\n\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e\r\n\u003ctestsuite xmlns:xsi\u003d\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation\u003d\"https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd\" name\u003d\"org.foo.ATest\" time\u003d\"0.139\" tests\u003d\"7\" errors\u003d\"0\" skipped\u003d\"0\" failures\u003d\"0\"\u003e\r\n  \u003cproperties\u003e\r\n    \u003c!-- list of properties... --\u003e\r\n  \u003c/properties\u003e\r\n  \u003ctestcase name\u003d\"myNormalJunit4Test\" classname\u003d\"org.foo.ATest\" time\u003d\"0.027\"/\u003e\r\n  \u003ctestcase name\u003d\"myRepeatedTest\" classname\u003d\"myRepeatedTest()\" time\u003d\"0.004\"/\u003e\r\n  \u003ctestcase name\u003d\"myRepeatedTest\" classname\u003d\"myRepeatedTest()\" time\u003d\"0.001\"/\u003e\r\n  \u003ctestcase name\u003d\"myRepeatedTest\" classname\u003d\"myRepeatedTest()\" time\u003d\"0.001\"/\u003e\r\n  \u003ctestcase name\u003d\"myRepeatedTest\" classname\u003d\"myRepeatedTest()\" time\u003d\"0\"/\u003e\r\n  \u003ctestcase name\u003d\"myRepeatedTest\" classname\u003d\"myRepeatedTest()\" time\u003d\"0\"/\u003e\r\n  \u003ctestcase name\u003d\"myRepeatedTest\" classname\u003d\"myRepeatedTest()\" time\u003d\"0.001\"/\u003e\r\n  \u003ctestcase name\u003d\"myParametrizedTest\" classname\u003d\"myParametrizedTest(String)\" time\u003d\"0.011\"/\u003e\r\n  \u003ctestcase name\u003d\"myParametrizedTest\" classname\u003d\"myParametrizedTest(String)\" time\u003d\"0\"/\u003e\r\n  \u003ctestcase name\u003d\"myParametrizedTest\" classname\u003d\"myParametrizedTest(String)\" time\u003d\"0\"/\u003e\r\n  \u003ctestcase name\u003d\"myParametrizedTest\" classname\u003d\"myParametrizedTest(String)\" time\u003d\"0\"/\u003e\r\n  \u003ctestcase name\u003d\"myNormalJunit5Test\" classname\u003d\"org.foo.ATest\" time\u003d\"0\"/\u003e\r\n  \u003ctestcase name\u003d\"myNormalJunit5Test\" classname\u003d\"org.foo.ATest$RunTest\" time\u003d\"0\"/\u003e\r\n\u003c/testsuite\u003e\r\n{code}","component":"SonarJava","component_version":"5.1"}