{"description":"Given a sample file like this:\r\n\r\n{code}\r\npackage its;public class MyTest {int a;int a;}\r\n{code}\r\n\r\nSonarJava in SonarLint fails with:\r\n\r\n{code}\r\n1 source files to be analyzed\r\nUnable to create symbol table for : /tmp/junit9061997391740221748/junit5528732718692719982/MyTest.java\r\njava.lang.IllegalStateException: Registering symbol: \u0027a\u0027 twice in the same scope\r\n        at com.google.common.base.Preconditions.checkState(Preconditions.java:199) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.Scope.enter(Scope.java:54) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.FirstPass.enterSymbol(FirstPass.java:515) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.FirstPass.declareVariable(FirstPass.java:429) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.FirstPass.visitVariable(FirstPass.java:369) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.model.declaration.VariableTreeImpl.accept(VariableTreeImpl.java:185) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.plugins.java.api.tree.BaseTreeVisitor.scan(BaseTreeVisitor.java:43) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.plugins.java.api.tree.BaseTreeVisitor.scan(BaseTreeVisitor.java:37) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.FirstPass.visitClass(FirstPass.java:264) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.model.declaration.ClassTreeImpl.accept(ClassTreeImpl.java:202) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.plugins.java.api.tree.BaseTreeVisitor.scan(BaseTreeVisitor.java:43) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.plugins.java.api.tree.BaseTreeVisitor.scan(BaseTreeVisitor.java:37) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.FirstPass.visitCompilationUnit(FirstPass.java:128) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.resolve.SemanticModel.createFor(SemanticModel.java:64) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.model.VisitorsBridge.visitFile(VisitorsBridge.java:105) ~[sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.ast.JavaAstScanner.simpleScan(JavaAstScanner.java:96) [sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.ast.JavaAstScanner.scan(JavaAstScanner.java:68) [sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.JavaSquid.scanSources(JavaSquid.java:120) [sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.java.JavaSquid.scan(JavaSquid.java:114) [sonar-java-plugin-5.0.1.12818.jar:na]\r\n        at org.sonar.plugins.java.JavaSquidSensor.execute(JavaSquidSensor.java:91) [sonar-java-plugin-5.0.1.12818.jar:na]\r\n{code}","component":"SonarJava","component_version":""}