{"description":"When exception is thrown (with {{throw}} or via method invocation) exceptional symbolic value is put on stack. This is used in a {{catch}} block to associate catch variable symbol with the exception symbolic value. If the control flow goes into {{finally}} block, stack should be cleared.\r\n\r\nBecause stack is not cleared, we get some incorrect flow messages about exception being thrown in finally statements.\r\n\r\n{code}\r\nvoid test_finally(Object o, boolean b2) {\r\n    try {\r\n      o \u003d null; //  Implies o is null\r\n      methodA(); // Exception is thrown\r\n      o \u003d \"\";\r\n    } finally {\r\n      if (b2) {  // \u003c-- wrong message \"Exception is thrown.\"\r\n        o.toString(); // Noncompliant \r\n      }\r\n    }\r\n  }\r\n{code}","component":"SonarJava","component_version":""}