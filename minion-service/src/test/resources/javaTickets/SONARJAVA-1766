{"description":"Secondaries are currently reported based on column position (first column is at position 1), when they should be reported using offset from starting of line (starting from 0).\r\n\r\nOn SonarLint, the following exception is thrown when offset is not handled correctly:\r\n{code}\r\njava.lang.IllegalArgumentException: 65 is not a valid line offset for pointer. File [path\u003d...\\pom.xml] has 64 character(s) at line 398\r\n\tat org.sonar.api.internal.google.common.base.Preconditions.checkArgument(Preconditions.java:148)\r\n\tat org.sonar.api.batch.fs.internal.DefaultInputFile.checkValid(DefaultInputFile.java:218)\r\n\tat org.sonar.api.batch.fs.internal.DefaultInputFile.newPointer(DefaultInputFile.java:209)\r\n\tat org.sonar.api.batch.fs.internal.DefaultInputFile.newRange(DefaultInputFile.java:240)\r\n\tat org.sonar.java.JavaIssue.addSecondaryLocation(JavaIssue.java:71)\r\n\tat org.sonar.java.SonarComponents.reportIssueAfterSQ52(SonarComponents.java:223)\r\n\tat org.sonar.java.SonarComponents.reportIssue(SonarComponents.java:205)\r\n\tat org.sonar.java.xml.maven.PomCheckContextImpl.reportIssue(PomCheckContextImpl.java:65)\r\n\tat org.sonar.java.checks.xml.maven.DependencyWithSystemScopeCheck.scanFile(DependencyWithSystemScopeCheck.java:50)\r\n\tat org.sonar.java.xml.XmlAnalyzer.simpleScanAsPomFile(XmlAnalyzer.java:116)\r\n\tat org.sonar.java.xml.XmlAnalyzer.simpleScan(XmlAnalyzer.java:99)\r\n\tat org.sonar.java.xml.XmlAnalyzer.scan(XmlAnalyzer.java:81)\r\n\tat org.sonar.plugins.java.XmlFileSensor.analyse(XmlFileSensor.java:53)\r\n\tat org.sonarsource.sonarlint.core.analyzer.sensor.SensorsExecutor.executeSensor(SensorsExecutor.java:72)\r\n\tat org.sonarsource.sonarlint.core.analyzer.sensor.SensorsExecutor.execute(SensorsExecutor.java:62)\r\n\tat org.sonarsource.sonarlint.core.analyzer.sensor.PhaseExecutor.execute(PhaseExecutor.java:45)\r\n\tat org.sonarsource.sonarlint.core.container.analysis.AnalysisContainer.doAfterStart(AnalysisContainer.java:137)\r\n\tat org.sonarsource.sonarlint.core.container.ComponentContainer.startComponents(ComponentContainer.java:125)\r\n\tat org.sonarsource.sonarlint.core.container.ComponentContainer.execute(ComponentContainer.java:110)\r\n\tat org.sonarsource.sonarlint.core.container.standalone.StandaloneGlobalContainer.analyze(StandaloneGlobalContainer.java:117)\r\n\tat org.sonarsource.sonarlint.core.StandaloneSonarLintEngineImpl.analyze(StandaloneSonarLintEngineImpl.java:93)\r\n\tat org.sonarsource.sonarlint.core.StandaloneSonarLintEngineImpl.analyze(StandaloneSonarLintEngineImpl.java:83)\r\n\tat org.sonarlint.eclipse.core.internal.jobs.StandaloneSonarLintClientFacade.startAnalysis(StandaloneSonarLintClientFacade.java:58)\r\n\tat org.sonarlint.eclipse.core.internal.jobs.AnalyzeProjectJob$1.run(AnalyzeProjectJob.java:377)\r\n{code}","component":"SonarJava","component_version":"4.0"}