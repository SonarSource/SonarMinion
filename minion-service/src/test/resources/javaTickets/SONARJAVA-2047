{"description":"Consider following code\r\n\r\n{code}\r\nclass A {\r\n   public char doSomething2() {\r\n    String s \u003d null; // flow@assignment2 {{\u0027s\u0027 is assigned null}}\r\n    s.charAt(0); // Noncompliant [[flows\u003dassignment2]]  flow@assignment2 {{\u0027s\u0027 is dereferenced}}\r\n  }\r\n}\r\n{code}\r\n\r\nThe flow message on the first line of the method will be missing because we do not track symbol {{s}} when computing the flow.  {{ProgramState#lastEvaluated}} is null on the EG node where NP dereference is detected.\r\n\r\nFollowing works as intended.\r\n\r\n{code}\r\nclass A {\r\n   public char doSomething2() {\r\n    String s \u003d null; // flow@assignment2 {{\u0027s\u0027 is assigned null}}\r\n    s.toString(); // Noncompliant [[flows\u003dassignment2]]  flow@assignment2 {{\u0027s\u0027 is dereferenced}}\r\n  }\r\n}\r\n{code}\r\n\r\nWhen argument is itself a symbol, the flow message will be incorrect (this was before in ticket SONARJAVA-2112 )\r\n\r\n{code}\r\nvoid f() {\r\n    Object arg \u003d \"\"; // \u0027arg\u0027  is assigned non-null\r\n    Object nullable \u003d null;  \r\n    nullable.call(arg); // NPE  \u0027nullable\u0027 is dereferenced.\r\n  }\r\n{code}\r\n\r\nCorrectly flow message should be on line {{Object nullable \u003d null}} referring to the {{nullable}} symbol.","component":"SonarJava","component_version":"4.6"}