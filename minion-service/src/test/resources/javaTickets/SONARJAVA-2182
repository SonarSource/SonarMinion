{"description":"\r\nThe following code analyzed by ConditionAlwaysTrueOrFalse check leads to ClassCastException as the exit symbolic value is not an exceptional  symbolic value but rather the {{true}} literal SV in this case : \r\n{code}\r\npublic class ReturnInFinally {\r\n  private class MyException extends Exception {}\r\n  private boolean something() {\r\n    try {\r\n      foo();\r\n    } catch (MyException e) {\r\n      throw e;\r\n    } finally {\r\n      return true;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  abstract void foo() throws MyException;\r\n}\r\n{code}\r\n\r\nThe exit value is actually correct regarding flow of execution but expecting the SV to be an exceptional SV in case of return in finally is incorrect. ","component":"SonarJava","component_version":"4.7"}