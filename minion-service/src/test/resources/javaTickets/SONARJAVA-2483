{"description":"Actually thrown exception can be sub type of the exception declared in the {{throws}} declaration of the method. Catch blocks are evaluated using actual exception, so catch block which will be executed can\u0027t be decided statically and all catch blocks in the hierarchy of thrown exception should be symbolically executed. See following code as an example\r\n\r\n{code}\r\npublic class CatchBlock {\r\n\r\n  void test() {\r\n    boolean bool \u003d false;\r\n    try {\r\n      throwConcrete();\r\n    } catch (ConcreteException e) {  // catch block not evaluated\r\n      System.out.println(\"Concrete\");\r\n      bool \u003d true;\r\n    } catch (GeneralException e) {\r\n      System.out.println(\"General\");\r\n    }\r\n    if (bool) { // FP condition always false\r\n\r\n    }\r\n  }\r\n\r\n  void throwConcrete() throws GeneralException {\r\n   if (test)\r\n    throw new ConcreteException();\r\n  throw new GeneralExceptionI();\r\n  }\r\n}\r\n\r\nclass GeneralException extends Exception {}\r\n\r\nclass ConcreteException extends GeneralException {}\r\n{code}\r\n\r\nIt is possible for both catch blocks to be executed, depending on concrete type of exception.","component":"SonarJava","component_version":"5.0"}