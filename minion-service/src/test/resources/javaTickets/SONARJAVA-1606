{"description":"Two type variables will be considered as being subtype only based on their erasure. If the type var as more that one bound, then they will be ignored.\r\n\r\n{code}\r\nclass TypeParameterUsedInMethods\u003cT, U\u003e {\r\n  Function\u003c? super T, ? extends U\u003e getter;\r\n\r\n  void foo(T val, U wantedValue) {\r\n    getter.apply(val); // resolved, valid\r\n    getter.apply(new Object()); // resolved, but does not compile\r\n    getter.apply(wantedValue); // resolved, but does not compile (U is not a subtype of \u0027? super T\u0027)\r\n  }\r\n\r\n  static class Function\u003cX, Y\u003e {\r\n    Y apply(X from) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n{code}","component":"SonarJava","component_version":"3.13"}