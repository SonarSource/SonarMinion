{"description":"Type of field {{id}} is not properly resolved to known parametrization when more than one layer of class hierarchy is involved.\r\nAs a side effect, it causes FP for rule RSPEC-2390, as we are not able to tell that types are compatible when invoking {{contains(...)}}.\r\n\r\n{code}\r\nimport java.util.Set;\r\n\r\nclass A\u003cK\u003e {\r\n  K id;\r\n}\r\n\r\nclass B\u003cJ\u003e extends A\u003cJ\u003e { }\r\n\r\n// two level of type hierarchy\r\nclass C extends B\u003cInteger\u003e {\r\n  void foo(Set\u003cInteger\u003e set) {\r\n    set.contains(id); // type of \u0027id\u0027 wrongly resolved to \u0027K\u0027 -- \u003e FP on S2390\r\n  }\r\n}\r\n\r\n// one level of type hierarchy\r\nclass D extends A\u003cInteger\u003e {\r\n  void foo(Set\u003cInteger\u003e set) {\r\n    set.contains(id); // type of \u0027id\u0027 correctly resolved to Integer\r\n  }\r\n}\r\n{code}","component":"SonarJava","component_version":"4.13"}