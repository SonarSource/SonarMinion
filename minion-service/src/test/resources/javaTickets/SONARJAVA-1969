{"description":"{code}\r\nimport java.io.BufferedReader;\r\nimport java.io.File;\r\nimport java.io.FileReader;\r\nimport java.io.IOException;\r\nimport java.io.PrintStream;\r\n\r\npublic class SonarQubeTest11\r\n{\r\n    private boolean okToPrint \u003d true;\r\n\r\n    public void echoFile(PrintStream ps, File f) throws IOException, InterruptedException\r\n    {\r\n        BufferedReader br \u003d new BufferedReader(new FileReader(f));\r\n\r\n        try\r\n        {\r\n            while (okToPrint)\r\n            {\r\n                Thread.sleep(1000);\r\n                ps.println(br.readLine());\r\n            }\r\n        }\r\n        catch (IOException ex)\r\n        {\r\n            // FP: squid:S2583. SQ claims this always evaluates true\r\n            if (okToPrint)\r\n            {\r\n                throw new RuntimeException(\"Couldn\u0027t read a line\", ex);\r\n            }\r\n\r\n            // IF in fact this always evaluates to true, this should be unreachable code, but that\r\n            // finding doesn\u0027t occur!\r\n            throw new RuntimeException(\"Got an error, but it\u0027s not OK to print\", ex);\r\n        }\r\n    }\r\n\r\n    public void stopPrinting()\r\n    {\r\n        okToPrint \u003d false;\r\n    }\r\n\r\n}\r\n\r\n{code}","component":"SonarJava","component_version":"4.3"}